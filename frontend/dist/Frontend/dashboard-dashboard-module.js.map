{"version":3,"sources":["./src/app/services/dashboard.service.ts","./src/app/dashboard/dashboard.routing.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard.module.ts"],"names":[],"mappings":"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","file":"dashboard-dashboard-module.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n\n  url = environment.apiUrl;\n\n  constructor(private httpClient:HttpClient) { }\n\n  getDetails(){\n    return this.httpClient.get(this.url+\"/dashboard/details/\");\n  }\n}\n","import { Routes } from '@angular/router';\n\nimport { DashboardComponent } from './dashboard.component';\n\nexport const DashboardRoutes: Routes = [{\n  path: '',\n  component: DashboardComponent\n}];\n","import { Component, AfterViewInit } from '@angular/core';\nimport { DashboardService } from '../services/dashboard.service';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { SnackbarService } from '../services/snackbar.service';\nimport { GlobalConstants } from '../shared/global-constants';\n\n@Component({\n\tselector: 'app-dashboard',\n\ttemplateUrl: './dashboard.component.html',\n\tstyleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements AfterViewInit {\n\n  responseMessage:any;\n  data:any;\n\n\tngAfterViewInit() { }\n\n\tconstructor(private dashboardService:DashboardService,\n    private ngxService:NgxUiLoaderService,\n    private snackbarService:SnackbarService) {\n      this.ngxService.start();\n      this.dashdoardData();\n\t}\n\n  dashdoardData(){\n    this.dashboardService.getDetails().subscribe((response:any)=>{\n      this.ngxService.stop();\n      this.data = response;\n    },(error:any)=>{\n      this.ngxService.stop();\n      console.log(error);\n      if(error.error?.message){\n        this.responseMessage = error.error?.message;\n      }\n      else{\n        this.responseMessage = GlobalConstants.genericError;\n      }\n      this.snackbarService.openSnackBar(this.responseMessage,GlobalConstants.error);\n    })\n  }\n}\n","<body>\r\n  <mat-card>\r\n    <b><span>Dashboard</span></b>\r\n  </mat-card>\r\n  <br>\r\n  <div class=\"row\">\r\n    <div class=\"column\">\r\n      <div class=\"card\">\r\n        <div class=\"container\">\r\n          <h2 class=\"title\">Total Category:</h2>\r\n          <h1 class=\"title\">{{data?.category}}</h1>\r\n          <p><button class=\"button\" [routerLink]=\"['/cafe/category']\">View Category</button></p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"column\">\r\n      <div class=\"card\">\r\n        <div class=\"container\">\r\n          <h2 class=\"title\">Total Product:</h2>\r\n          <h1 class=\"title\">{{data?.product}}</h1>\r\n          <p><button class=\"button\" [routerLink]=\"['/cafe/product']\">View Product</button></p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"column\">\r\n      <div class=\"card\">\r\n        <div class=\"container\">\r\n          <h2 class=\"title\">Total Bill:</h2>\r\n          <h1 class=\"title\">{{data?.bill}}</h1>\r\n          <p><button class=\"button\" [routerLink]=\"['/cafe/bill']\">View Bill</button></p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</body>\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { DashboardComponent } from './dashboard.component';\nimport { DashboardRoutes } from './dashboard.routing';\nimport { MaterialModule } from '../shared/material-module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialModule,\n    FlexLayoutModule,\n    RouterModule.forChild(DashboardRoutes)\n  ],\n  declarations: [DashboardComponent]\n})\nexport class DashboardModule { }\n"],"sourceRoot":"webpack:///"}