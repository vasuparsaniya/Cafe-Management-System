{"version":3,"sources":["./src/app/material-component/manage-order/manage-order.component.ts","./src/app/material-component/manage-order/manage-order.component.html","./src/app/material-component/manage-category/manage-category.component.ts","./src/app/material-component/manage-category/manage-category.component.html","./src/app/material-component/material.module.ts","./src/app/material-component/dialog/category/category.component.ts","./src/app/material-component/dialog/category/category.component.html","./src/app/material-component/dialog/view-bill-products/view-bill-products.component.ts","./src/app/material-component/dialog/view-bill-products/view-bill-products.component.html","./src/app/services/product.service.ts","./src/app/material-component/manage-user/manage-user.component.ts","./src/app/material-component/manage-user/manage-user.component.html","./src/app/services/bill.service.ts","./src/app/services/category.service.ts","./src/app/material-component/dialog/product/product.component.ts","./src/app/material-component/dialog/product/product.component.html","./src/app/material-component/manage-product/manage-product.component.ts","./src/app/material-component/manage-product/manage-product.component.html","./src/app/material-component/view-bill/view-bill.component.ts","./src/app/material-component/view-bill/view-bill.component.html","./src/app/material-component/material.routing.ts"],"names":[],"mappings":"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","file":"material-component-material-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { BillService } from 'src/app/services/bill.service';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { ProductService } from 'src/app/services/product.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\nimport { saveAs } from 'file-saver';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-manage-order',\n  templateUrl: './manage-order.component.html',\n  styleUrls: ['./manage-order.component.scss']\n})\nexport class ManageOrderComponent implements OnInit {\n\n  displayedColumns: string[] = ['name', 'category', 'price', 'quantity', 'total', 'edit'];\n  dataSource: any = [];\n  manageOrderForm: any = FormGroup;\n  categorys: any = [];\n  products: any = [];\n  price: any;\n  totalAmount: number = 0;\n  responseMessage: any;\n\n  constructor(private formBuilder: FormBuilder,\n    private categoryService: CategoryService,\n    private productService: ProductService,\n    private snackbarService: SnackbarService,\n    private billService: BillService,\n    private ngxService: NgxUiLoaderService) { }\n\n  ngOnInit(): void {\n    this.ngxService.start();\n    this.getCategorys();\n    this.manageOrderForm = this.formBuilder.group({\n      name: [null, [Validators.required, Validators.pattern(GlobalConstants.nameRegex)]],\n      email: [null, [Validators.required, Validators.pattern(GlobalConstants.emailRegex)]],\n      contactNumber: [null, [Validators.required, Validators.pattern(GlobalConstants.contactNumberRegex)]],\n      paymentMethod: [null, [Validators.required]],\n      product: [null, [Validators.required]],\n      category: [null, [Validators.required]],\n      quantity: [null, [Validators.required]],\n      price: [null, [Validators.required]],\n      total: [0, [Validators.required]]\n    })\n  }\n\n  getCategorys() {\n    this.categoryService.getCategorys().subscribe((response: any) => {\n      this.ngxService.stop()\n      this.categorys = response;\n    }, (error: any) => {\n      this.ngxService.stop();\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n      } else {\n        this.responseMessage = GlobalConstants.genericError;\n      }\n      this.snackbarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n    })\n  }\n\n  getProductsByCategory(value: any) {\n    this.productService.getProductByCategory(value.id).subscribe((response: any) => {\n      this.products = response;\n      this.manageOrderForm.controls['price'].setValue('');\n      this.manageOrderForm.controls['quantity'].setValue('');\n      this.manageOrderForm.controls['total'].setValue(0);\n    }, (error: any) => {\n      this.ngxService.stop();\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n      } else {\n        this.responseMessage = GlobalConstants.genericError;\n      }\n      this.snackbarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n    });\n  }\n\n  getProductDetails(value: any) {\n    this.productService.getById(value.id).subscribe((response: any) => {\n      this.price = response.price;\n      this.manageOrderForm.controls['price'].setValue(response.price);\n      this.manageOrderForm.controls['quantity'].setValue('1');\n      this.manageOrderForm.controls['total'].setValue(this.price * 1);     //if we give quantity 2 then total is this.price*2\n    }, (error: any) => {\n      this.ngxService.stop();\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n      } else {\n        this.responseMessage = GlobalConstants.genericError;\n      }\n      this.snackbarService.openSnackBar(this.responseMessage, GlobalConstants.error)\n    })\n  }\n\n  setQuantity(value: any) {\n    var temp = this.manageOrderForm.controls['quantity'].value;\n    if (temp > 0) {\n      this.manageOrderForm.controls['total'].setValue(this.manageOrderForm.controls['quantity'].value * this.manageOrderForm.controls['price'].value);\n    } else if (temp != '') {\n      this.manageOrderForm.controls['quantity'].setValue('1');\n      this.manageOrderForm.controls['total'].setValue(this.manageOrderForm.controls['quantity'].value * this.manageOrderForm.controls['price'].value);\n    }\n  }\n\n  // validateProductAdd(){\n  //   if(this.manageOrderForm.controls['total'].value === 0 || this.manageOrderForm.controls['total'].value === null || this.manageOrderForm.controls['quntity'].value <= 0){\n  //     return true;\n  //   }else{\n  //     return false;\n  //   }\n  // }\n\n  validateProductAdd() {\n    if (this.manageOrderForm.controls['total'].value === 0 || this.manageOrderForm.controls['total'].value === null || this.manageOrderForm.controls['quantity'].value <= 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n\n  validateSubmit() {\n    if (this.totalAmount === 0 || this.manageOrderForm.controls['name'].value === null ||\n      this.manageOrderForm.controls['email'].value === null || this.manageOrderForm.controls['contactNumber'].value === null ||\n      this.manageOrderForm.controls['paymentMethod'].value === null ||\n      !(this.manageOrderForm.controls['contactNumber'].valid) || !(this.manageOrderForm.controls['email'].valid)) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n  add() {\n    var formData = this.manageOrderForm.value;\n    var productName = this.dataSource.find((e: { id: number; }) => e.id == formData.product.id);\n    if (productName === undefined) {\n      this.totalAmount = this.totalAmount + formData.total;\n      this.dataSource.push({\n        id: formData.product.id, name: formData.product.name, category: formData.category.name,\n        quantity: formData.quantity, price: formData.price, total: formData.total\n      });\n      this.dataSource = [...this.dataSource];\n      this.snackbarService.openSnackBar(GlobalConstants.productAdded, \"success\");\n    }\n    else {\n      this.snackbarService.openSnackBar(GlobalConstants.productExistError, GlobalConstants.error);\n    }\n  }\n\n  handleDeleteAction(value: any, element: any) {\n    this.totalAmount = this.totalAmount - element.total;\n    this.dataSource.splice(value, 1);\n    this.dataSource = [...this.dataSource];\n  }\n\n  // submitAction() {\n  //   this.ngxService.start();\n  //   var formData = this.manageOrderForm.value;\n  //   var data = {\n  //     name: formData.name,\n  //     email: formData.email,\n  //     contactNumber: formData.contactNumber,\n  //     paymentMethod: formData.paymentMethod,\n  //     totalAmount: this.totalAmount,\n  //     productDetails: JSON.stringify(this.dataSource)\n  //   }\n  //   this.billService.generateReport(data).subscribe((response: any) => {\n  //     console.log(response?.uuid);\n  //     this.downloadFile(response?.uuid);\n  //     this.manageOrderForm.reset();\n  //     this.dataSource = [];\n  //     this.totalAmount = 0;\n  //   }, (error: any) => {\n  //     this.ngxService.stop();\n  //     if (error.error?.message) {\n  //       this.responseMessage = error.error?.message;\n  //     } else {\n  //       this.responseMessage = GlobalConstants.genericError;\n  //     }\n  //     this.snackbarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n  //   })\n  // }\n\n  //==========================================\n  // submitAction() {\n  //   this.ngxService.start();\n  //   var formData = this.manageOrderForm.value;\n  //   var data = {\n  //     name: formData.name,\n  //     email: formData.email,\n  //     contactNumber: formData.contactNumber,\n  //     paymentMethod: formData.paymentMethod,\n  //     totalAmount: this.totalAmount,\n  //     productDetails: JSON.stringify(this.dataSource)\n  //   }\n  //   this.billService.generateReport(data).subscribe((response: any) => {\n  //     console.log(response?.uuid);\n  //     //=================================\n  //     var dataGetpdf = {\n  //       name: formData.name,\n  //       email: formData.email,\n  //       uuid: response?.uuid,\n  //       contactNumber: formData.contactNumber,\n  //       paymentMethod: formData.paymentMethod,\n  //       totalAmount: this.totalAmount,\n  //       productDetails: JSON.stringify(this.dataSource)\n  //     }\n  //     this.downloadFile(response?.uuid);\n\n\n\n  //     // this.billService.getPdf(dataGetpdf).subscribe((response: any) => {\n  //     //   this.ngxService.stop();\n  //     //   this.responseMessage = response?.message;   //arive from server side\n\n  //     //   // this.snackbarService.openSnackBar('PDF sent successfully through email!', \"success\");\n  //     //   this.snackbarService.openSnackBar(this.responseMessage, \"\");\n\n  //     // }, (error) => {\n  //     //   this.ngxService.stop();\n  //     //   // this.snackbarService.openSnackBar('Failed to send PDF through email', \"error\");\n  //     //   // console.error(error);\n\n  //     //   if (error.error?.message) {\n  //     //     this.responseMessage = error.error.message;\n  //     //   }\n  //     //   else {\n  //     //     this.responseMessage = GlobalConstants.genericError;\n  //     //   }\n  //     //   this.snackbarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n  //     // });\n\n  //     //========================\n\n  //     this.manageOrderForm.reset();\n  //     this.dataSource = [];\n  //     this.totalAmount = 0;\n  //   }, (error: any) => {\n  //     this.ngxService.stop();\n  //     if (error.error?.message) {\n  //       this.responseMessage = error.error?.message;\n  //     } else {\n  //       this.responseMessage = GlobalConstants.genericError;\n  //     }\n  //     this.snackbarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n  //   })\n  // }\n\n\n  submitAction() {\n    this.ngxService.start();\n    var formData = this.manageOrderForm.value;\n    var data = {\n      name: formData.name,\n      email: formData.email,\n      contactNumber: formData.contactNumber,\n      paymentMethod: formData.paymentMethod,\n      totalAmount: this.totalAmount,\n      productDetails: JSON.stringify(this.dataSource)\n    }\n    this.billService.generateReport(data).subscribe((response: any) => {\n      console.log(response?.uuid);\n      // this.downloadFile(response?.uuid);\n\n      //===============================\n      // var data = {\n      //   name:values.name,\n      //   email:values.email,\n      //   uuid:values.uuid,\n      //   contactNumber:values.contactNumber,\n      //   paymentMethod:values.paymentMethod,\n      //   totalAmount:values.total,\n      //   productDetails:values.productDetails\n      // }\n\n      var dataGetpdf = {\n              name: formData.name,\n              email: formData.email,\n              uuid: response?.uuid,\n              contactNumber: formData.contactNumber,\n              paymentMethod: formData.paymentMethod,\n              totalAmount: this.totalAmount,\n              productDetails: JSON.stringify(this.dataSource)\n            }\n      this.billService.getPdf(dataGetpdf).subscribe((response:any) => {\n          this.ngxService.stop();\n          this.responseMessage = response?.message;   //arive from server side\n\n          // this.snackbarService.openSnackBar('PDF sent successfully through email!', \"success\");\n          this.snackbarService.openSnackBar(this.responseMessage,\"\");\n\n        },(error:any) => {\n          this.ngxService.stop();\n          // this.snackbarService.openSnackBar('Failed to send PDF through email', \"error\");\n          // console.error(error);\n\n          if(error.error?.message){\n            this.responseMessage = error.error.message;\n          }\n          else{\n            this.responseMessage = GlobalConstants.genericError;\n          }\n          this.snackbarService.openSnackBar(this.responseMessage,GlobalConstants.error);\n        });\n        //==========================================\n      this.manageOrderForm.reset();\n      this.dataSource = [];\n      this.totalAmount = 0;\n      this.ngxService.stop();\n    }, (error: any) => {\n      this.ngxService.stop();\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n      } else {\n        this.responseMessage = GlobalConstants.genericError;\n      }\n      this.snackbarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n    })\n  }\n\n  // downloadFile(fileName: any) {\n  //   var data = {\n  //     uuid: fileName\n  //   };\n  //   console.log(data);\n  //   this.billService.getPdf(data).subscribe((response: any) => {\n  //       // Handle successful response\n  //       // saveAs(response, fileName + '.pdf');\n  //       this.ngxService.stop();\n  //     },\n  //     (error: HttpErrorResponse) => {\n  //       // Handle error response\n  //       console.error('An error occurred:', error.error);\n  //       console.log('Error status:', error.status);\n  //       console.log('Error message:', error.message);\n  //       this.ngxService.stop();\n  //     });\n  // }\n\n  //======================================\n\n  // downloadFile(uuid: string) {\n  //   this.billService.getPdf(uuid).subscribe(\n  //     (response: Blob) => {\n  //       // Handle successful response\n  //       const blob = new Blob([response], { type: 'application/pdf' });\n  //       saveAs(blob, `${uuid}.pdf`);\n  //       this.ngxService.stop();\n  //     },\n  //     (error: any) => {\n  //       // Handle error response\n  //       console.error('An error occurred:', error);\n  //       this.ngxService.stop();\n  //     });\n  // }\n}\n","<mat-card>\n  <b><span>Manage Order</span></b>\n  <button mat-flat-button color=\"primary\" class=\"float-right\" [disabled]=\"validateSubmit()\"\n    (click)=\"submitAction()\">Submit & Get Bill</button>\n</mat-card>\n<hr>\n<mat-card>\n  <b><span>Customer Details:</span></b>\n  <form [formGroup]=\"manageOrderForm\">\n    <div fxFlex fxLayout=\"column\">\n      <div fxLayout=\"row wrap\">\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>Name</mat-label>\n          <input matInput formControlName=\"name\" required />\n          <mat-error *ngIf=\"manageOrderForm.controls.name.touched && manageOrderForm.controls.name.invalid\">\n            <span *ngIf=\"manageOrderForm.controls.name.errors.required\">This field is mandatory</span>\n            <!-- <span *ngIf=\"manageOrderForm.controls.name.errors.pattern\">This field is invalid</span> -->\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>Email</mat-label>\n          <input matInput formControlName=\"email\" required />\n          <mat-error *ngIf=\"manageOrderForm.controls.email.touched && manageOrderForm.controls.email.invalid\">\n            <span *ngIf=\"manageOrderForm.controls.email.errors.required\">This field is mandatory</span>\n            <span *ngIf=\"manageOrderForm.controls.email.errors.pattern\">This field is invalid</span>\n\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>ContactNumber</mat-label>\n          <input matInput formControlName=\"contactNumber\" required />\n          <mat-error\n            *ngIf=\"manageOrderForm.controls.contactNumber.touched && manageOrderForm.controls.contactNumber.invalid\">\n            <span *ngIf=\"manageOrderForm.controls.contactNumber.errors.required\">This field is mandatory</span>\n            <span *ngIf=\"manageOrderForm.controls.contactNumber.errors.pattern\">This field is invalid</span>\n\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>PaymentMethod</mat-label>\n          <mat-select matInput formControlName=\"paymentMethod\" required>\n            <mat-option value=\"Cash\">Cash</mat-option>\n            <mat-option value=\"Credit Card\">Credit Card</mat-option>\n            <mat-option value=\"Debit Card\">Debit Card</mat-option>\n          </mat-select>\n          <mat-error\n            *ngIf=\"manageOrderForm.controls.paymentMethod.touched && manageOrderForm.controls.paymentMethod.invalid\">\n            <span *ngIf=\"manageOrderForm.controls.paymentMethod.errors.required\">This field is mandatory</span>\n            <span *ngIf=\"manageOrderForm.controls.paymentMethod.errors.pattern\">This field is invalid</span>\n          </mat-error>\n        </mat-form-field>\n      </div>\n    </div>\n  </form>\n</mat-card>\n<hr>\n<mat-card>\n  <b><span>Select Product</span></b>\n  <form [formGroup]=\"manageOrderForm\">\n    <div fxFlex fxLayout=\"column\">\n      <div fxLayout=\"row wrap\">\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>Category</mat-label>\n          <mat-select formControlName=\"category\" (selectionChange)=\"getProductsByCategory($event.value)\">\n            <mat-option *ngFor=\"let category of categorys\" [value]=\"category\">{{category.name}}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>Product</mat-label>\n          <mat-select formControlName=\"product\" (selectionChange)=\"getProductDetails($event.value)\">\n            <mat-option *ngFor=\"let product of products\" [value]=\"product\">{{product.name}}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>Price</mat-label>\n          <input matInput formControlName=\"price\" required readonly />\n          <mat-error *ngIf=\"manageOrderForm.controls.price.touched && manageOrderForm.controls.price.invalid\">\n            <span *ngIf=\"manageOrderForm.controls.price.errors.required\">This field is mandatory</span>\n            <span *ngIf=\"manageOrderForm.controls.price.errors.pattern\">This field is invalid</span>\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>Quantity</mat-label>\n          <input matInput formControlName=\"quantity\" required (keyup)=\"setQuantity($event)\" #input />\n          <mat-error *ngIf=\"manageOrderForm.controls.quantity.touched && manageOrderForm.controls.quantity.invalid\">\n            <span *ngIf=\"manageOrderForm.controls.quantity.errors.required\">This field is mandatory</span>\n            <span *ngIf=\"manageOrderForm.controls.quantity.errors.pattern\">This field is invalid</span>\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>Total</mat-label>\n          <input matInput formControlName=\"total\" required readonly />\n          <mat-error *ngIf=\"manageOrderForm.controls.total.touched && manageOrderForm.controls.total.invalid\">\n            <span *ngIf=\"manageOrderForm.controls.total.errors.required\">This field is mandatory</span>\n            <span *ngIf=\"manageOrderForm.controls.total.errors.pattern\">This field is invalid</span>\n          </mat-error>\n        </mat-form-field>\n      </div>\n    </div>\n  </form>\n  <div>\n    <button mat-flat-button color=\"primary\" [disabled]=\"validateProductAdd()\" (click)=\"add()\">Add</button>\n    <button mat-flat-button color=\"primary\" class=\"float-right\">Total Amount: {{totalAmount}}</button>\n  </div>\n</mat-card>\n<hr>\n<div class=\"responsive_table\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef>Name</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"category\">\n      <th mat-header-cell *matHeaderCellDef>Category</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.category}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"price\">\n      <th mat-header-cell *matHeaderCellDef>Price</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.price}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"quantity\">\n      <th mat-header-cell *matHeaderCellDef>Quantity</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.quantity}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"total\">\n      <th mat-header-cell *matHeaderCellDef>Total</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.total}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"edit\">\n      <th mat-header-cell *matHeaderCellDef>Delete</th>\n      <td mat-cell *matCellDef=\"let element;let i = index\" class=\"action-link\">\n        <button mat-icon-button color=\"primary\" matTooltip=\"Delete\" (click)=\"handleDeleteAction(i, element)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n\n    <!-- <ng-container matColumnDef=\"download\">\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button mat-icon-button color=\"primary\" (click)=\"downloadFile(element.uuid)\">\n          <mat-icon>file_download</mat-icon>\n        </button>\n      </td>\n    </ng-container> -->\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky:true\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\nimport { CategoryComponent } from '../dialog/category/category.component';\n\n@Component({\n  selector: 'app-manage-category',\n  templateUrl: './manage-category.component.html',\n  styleUrls: ['./manage-category.component.scss']\n})\nexport class ManageCategoryComponent implements OnInit {\n\n  displayedColumns:string[] = ['name','edit'];\n  dataSource:any;   //all datastore when ever API call\n  responseMessage:any;\n\n  constructor(private categoryService:CategoryService,\n    private ngxService:NgxUiLoaderService,\n    private dialog:MatDialog,\n    private snackbarService:SnackbarService,\n    private router:Router) { }\n\n  ngOnInit(): void {\n    this.ngxService.start();\n    this.tableData();\n  }\n\n  tableData(){\n    this.categoryService.getCategorys().subscribe((response:any)=>{\n\n        this.ngxService.stop();\n        this.dataSource = new MatTableDataSource(response);\n      },(error)=>{\n        this.ngxService.stop();\n        if(error.error?.message){\n          this.responseMessage = error.error?.message;\n        }\n        else{\n          this.responseMessage = GlobalConstants.genericError;\n        }\n\n        this.snackbarService.openSnackBar(this.responseMessage,GlobalConstants.error);\n      })\n  }\n\n  applyFilter(event:Event){\n    const filterValue = (event.target as HTMLInputElement).value;\n\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  handleAddAction(){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      action: 'Add'\n    }\n    dialogConfig.width = \"850px\";\n    const dialogRef = this.dialog.open(CategoryComponent,dialogConfig);\n    this.router.events.subscribe(()=>{\n      dialogRef.close();\n    });\n    const sub = dialogRef.componentInstance.onAddCategory.subscribe(\n      (response)=>{\n        this.tableData()\n      }\n    )\n  }\n\n  handleEditAction(values:any){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      action: 'Edit',\n      data:values\n    }\n    dialogConfig.width = \"850px\";\n    const dialogRef = this.dialog.open(CategoryComponent,dialogConfig);\n    this.router.events.subscribe(()=>{\n      dialogRef.close();\n    });\n    const sub = dialogRef.componentInstance.onEditCategory.subscribe(\n      (response)=>{\n        this.tableData()\n      }\n    )\n  }\n}\n","<mat-card>\n  <b><span>Manage Category</span></b>\n  <button mat-flat-button color=\"primary\" class=\"float-right\" (click)=\"handleAddAction()\">Add Category</button>\n</mat-card>\n<hr>\n\n<mat-card>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Filter</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" #input>\n  </mat-form-field>\n</mat-card>\n<hr>\n\n<div class=\"responsive_table\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\"> <!-- data take from manage-category.component.ts file-->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef>Name</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"edit\">\n      <th mat-header-cell *matHeaderCellDef>Action</th>\n      <td mat-cell *matCellDef=\"let element\" class=\"action-link\">\n        <button mat-icon-button color=\"primary\" matTooltip=\"Edit\" (click)=\"handleEditAction(element)\">\n          <mat-icon>edit</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></tr>\n    <tr mat-row *matRowDef=\"let row;columns:displayedColumns\"></tr>\n  </table>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { CdkTableModule } from '@angular/cdk/table';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { MaterialRoutes } from './material.routing';\nimport { MaterialModule } from '../shared/material-module';\nimport { ViewBillProductsComponent } from './dialog/view-bill-products/view-bill-products.component';\nimport { ConfirmationComponent } from './dialog/confirmation/confirmation.component';\nimport { ChangePasswordComponent } from './dialog/change-password/change-password.component';\nimport { ManageCategoryComponent } from './manage-category/manage-category.component';\nimport { CategoryComponent } from './dialog/category/category.component';\nimport { ManageProductComponent } from './manage-product/manage-product.component';\nimport { ProductComponent } from './dialog/product/product.component';\nimport { ManageOrderComponent } from './manage-order/manage-order.component';\nimport { ViewBillComponent } from './view-bill/view-bill.component';\nimport { ManageUserComponent } from './manage-user/manage-user.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(MaterialRoutes),\n    MaterialModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    CdkTableModule\n  ],\n  providers: [],\n  declarations: [\n    ViewBillProductsComponent,\n    ConfirmationComponent,\n    ChangePasswordComponent,\n    ManageCategoryComponent,\n    CategoryComponent,\n    ManageProductComponent,\n    ProductComponent,\n    ManageOrderComponent,\n    ViewBillComponent,\n    ManageUserComponent    \n  ]\n})\nexport class MaterialComponentsModule {}\n","import { Component, OnInit, EventEmitter, Inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.scss']\n})\nexport class CategoryComponent implements OnInit {\n\n  onAddCategory = new EventEmitter();\n  onEditCategory = new EventEmitter();\n  categoryForm:any = FormGroup;\n  dialogAction:any = \"Add\";\n  action:any = \"Add\";\n  responseMessage:any;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public dialogData:any,\n  private formBuilder:FormBuilder,\n  private categoryService:CategoryService,\n  public dialogRef:MatDialogRef<CategoryComponent>,\n  private snackbarService:SnackbarService) { }\n\n  ngOnInit(): void {\n    this.categoryForm = this.formBuilder.group({\n      name:[null,[Validators.required]]\n    });\n\n    if(this.dialogData.action === 'Edit'){\n      this.dialogAction = \"Edit\";\n      this.action = \"update\";\n      this.categoryForm.patchValue(this.dialogData.data);\n    }\n  }\n\n  handleSubmit(){\n    if(this.dialogAction === \"Edit\"){\n      this.edit();\n    }\n    else{\n      this.add();\n    }\n  }\n\n  add(){\n    var formData = this.categoryForm.value;\n    var data = {\n      name: formData.name\n    }\n    this.categoryService.add(data).subscribe((response:any)=>{\n      this.dialogRef.close();\n      this.onAddCategory.emit();\n      this.responseMessage = response.message;\n      this.snackbarService.openSnackBar(this.responseMessage,\"success\");\n    },(error:any)=>{\n      this.dialogRef.close();\n      if(error.error?.message){\n        this.responseMessage = error.error?.message;\n      }\n      else{\n        this.responseMessage = GlobalConstants.genericError;\n      }\n      this.snackbarService.openSnackBar(this.responseMessage,GlobalConstants.error);\n    })\n  }\n\n  edit(){\n    var formData = this.categoryForm.value;\n    var data = {\n      id:this.dialogData.data.id,\n      name: formData.name\n    }\n    this.categoryService.update(data).subscribe((response:any)=>{\n      this.dialogRef.close();\n      this.onEditCategory.emit();\n      this.responseMessage = response.message;\n      this.snackbarService.openSnackBar(this.responseMessage,\"success\");\n    },(error:any)=>{\n      this.dialogRef.close();\n      if(error.error?.message){\n        this.responseMessage = error.error?.message;\n      }\n      else{\n        this.responseMessage = GlobalConstants.genericError;\n      }\n      this.snackbarService.openSnackBar(this.responseMessage,GlobalConstants.error);\n    })\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row fxlayout=\"row\">\n    <span class=title-center>{{dialogData.action}} Category</span>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<mat-dialog-content class=\"mat-typography\">\n  <form [formGroup]=\"categoryForm\">\n    <div fxFlex fxlayout=\"column\">\n      <div fxlayout=\"row wrap\">\n      <mat-form-field appearance=\"fill\" fxFlex>\n        <mat-label>Name</mat-label>\n        <input matInput formControlName=\"name\" required>\n        <mat-error *ngIf=\"categoryForm.controls.name.touched && categoryForm.controls.name.invalid\">\n          <span *ngIf=\"categoryForm.controls.name.errors.required\">This field is mandatory</span>\n        </mat-error>\n      </mat-form-field>\n      </div>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"center\">\n  <button mat-raised-button color=\"primary\" submit=\"submit\" (click)=\"handleSubmit()\" [disabled]=\"!(categoryForm.valid && categoryForm.dirty)\">{{action}}</button>\n  <button mat-raised-button color=\"primary\" mat-dialog-close>Close</button>\n</mat-dialog-actions>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-view-bill-products',\n  templateUrl: './view-bill-products.component.html',\n  styleUrls: ['./view-bill-products.component.scss']\n})\nexport class ViewBillProductsComponent implements OnInit {\n\n  displayedColumns: string[] = ['name','category','price','quantity','total'];\n  dataSource:any;\n  data:any;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public dialogData:any,\n  public dialogRef: MatDialogRef<ViewBillProductsComponent>) { }\n\n  ngOnInit() {\n    this.data = this.dialogData.data;\n    this.dataSource = JSON.parse(this.dialogData.data.productDetails);\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row fxLayout=\"row\">\n    <span class=\"title-center\">View Bill</span>\n    <span class=\"spacer\"></span>\n    <button class=\"mat-dialog-close\" mat-icon-button mat-dialog-close>\n      <mat-icon>cancel</mat-icon>\n    </button>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<mat-dialog-content class=\"mat-typography\">\n  <table id=\"customers\">\n    <tr>\n      <td><b>Name:</b>{{data.name}}</td>\n      <td><b>Email:</b>{{data.email}}</td>\n    </tr>\n\n    <tr>\n      <td><b>ContactNumber:</b>{{data.contactNumber}}</td>\n      <td><b>Payment Method:</b>{{data.paymentMethod}}</td>\n    </tr>\n\n  </table>\n\n  <div class=\"responsive_table\">\n    <br>\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n      <ng-container matColumnDef=\"name\">\n        <th mat-Header-Cell *matHeaderCellDef>Name</th>\n        <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"category\">\n        <th mat-Header-Cell *matHeaderCellDef>Category</th>\n        <td mat-cell *matCellDef=\"let element\">{{element.category}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"price\">\n        <th mat-Header-Cell *matHeaderCellDef>Price</th>\n        <td mat-cell *matCellDef=\"let element\">{{element.price}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"quantity\">\n        <th mat-Header-Cell *matHeaderCellDef>Quantity</th>\n        <td mat-cell *matCellDef=\"let element\">{{element.quantity}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"total\">\n        <th mat-Header-Cell *matHeaderCellDef>Total</th>\n        <td mat-cell *matCellDef=\"let element\">{{element.total}}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky:true\"></tr>\n      <tr mat-row *matRowDef=\"let row;columns:displayedColumns;\"></tr>\n    </table>\n  </div>\n</mat-dialog-content>\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  url = environment.apiUrl;\n\n  constructor(private httpClient:HttpClient) { }\n\n  add(data:any){\n    return this.httpClient.post(this.url+\"/product/add/\",data,{\n      headers: new HttpHeaders().set('Content-Type',\"application/json\")\n    })\n  }\n\n  update(data:any){\n    return this.httpClient.patch(this.url+\"/product/update/\",data,{\n      headers: new HttpHeaders().set('Content-Type',\"application/json\")\n    })\n  }\n\n  getProducts(){\n    return this.httpClient.get(this.url+\"/product/get/\");\n  }\n\n  updateStatus(data:any){\n    return this.httpClient.patch(this.url+\"/product/updateStatus/\",data,{\n      headers: new HttpHeaders().set('Content-Type',\"application/json\")\n    })\n  }\n\n  delete(id:any){\n    return this.httpClient.delete(this.url+\"/product/delete/\"+id,{\n      headers: new HttpHeaders().set('Content-Type',\"application/json\")\n    })\n  }\n\n  getProductByCategory(id:any){\n    return this.httpClient.get(this.url + \"/product/getByCategory/\"+id);\n  }\n\n  getById(id:any){\n    return this.httpClient.get(this.url+\"/product/getById/\"+id);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\n\n@Component({\n  selector: 'app-manage-user',\n  templateUrl: './manage-user.component.html',\n  styleUrls: ['./manage-user.component.scss']\n})\nexport class ManageUserComponent implements OnInit {\n\n  displayedColumns:string[] = ['name','email','contactNumber','status'];\n  dataSource:any;\n  responseMessage:any;\n\n  constructor(private ngxService:NgxUiLoaderService,\n    private userService:UserService,\n    private snackbarService:SnackbarService) { }\n\n  ngOnInit(): void {\n    this.ngxService.start();\n    this.tableData();\n  }\n\n  tableData(){\n    this.userService.getUsers().subscribe((response:any)=>{\n      this.ngxService.stop();\n      this.dataSource = new MatTableDataSource(response);\n    },(error:any)=>{\n      this.ngxService.stop();\n      if(error.error?.message){\n        this.responseMessage = error.error?.message;\n      }\n      else{\n        this.responseMessage = GlobalConstants.genericError;\n      }\n      this.snackbarService.openSnackBar(this.responseMessage,GlobalConstants.error);\n    })\n  }\n\n  applyFilter(event:Event){\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  handleChangeAction(status:any,id:any){\n    this.ngxService.start();\n    var data = {\n      status:status.toString(),\n      id:id\n    }\n    this.userService.update(data).subscribe((response:any)=>{\n      this.ngxService.stop();\n      this.responseMessage = response?.message;\n      this.snackbarService.openSnackBar(this.responseMessage,\"success\");\n    },(error:any)=>{\n      this.ngxService.stop();\n      if(error.error?.message){\n        this.responseMessage = error.error?.message;\n      }\n      else{\n        this.responseMessage = GlobalConstants.genericError;\n      }\n      this.snackbarService.openSnackBar(this.responseMessage,GlobalConstants.error);\n    })\n  }\n\n}\n","<mat-card>\n  <b><span>Manage User</span></b>\n</mat-card>\n<hr>\n<mat-card>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Filter</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" #input>\n  </mat-form-field>\n</mat-card>\n<hr>\n<div class=\"responsive_table\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef>Name</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"email\">\n      <th mat-header-cell *matHeaderCellDef>Email</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.email}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"contactNumber\">\n      <th mat-header-cell *matHeaderCellDef>ContactNumber</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.contactNumber}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"status\">\n      <th mat-header-cell *matHeaderCellDef>Status</th>\n      <td mat-cell *matCellDef=\"let element\" class=\"action-link\">\n        <mat-slide-toggle (change)=\"handleChangeAction($event.checked,element.id)\"\n        matTooltip=\"Activate or Deactivate User\" [checked]=\"element.status\"></mat-slide-toggle>\n      </td>\n    </ng-container>\n\n    <tr mat-row *matHeaderRowDef=\"displayedColumns;sticky:true;\"></tr>\n    <tr mat-row *matRowDef=\"let row;columns:displayedColumns\"></tr>\n  </table>\n</div>\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BillService {\n\n  url = environment.apiUrl;\n\n  constructor(private httpClient: HttpClient) { }\n\n  generateReport(data: any) {\n    return this.httpClient.post(this.url + \"/bill/generateReport/\", data, {\n      headers: new HttpHeaders().set('Content-Type', \"application/json\")\n    });\n  }\n\n  // getPdf(data: any): Observable<Blob> {\n  //   return this.httpClient.post(this.url + \"/bill/getPdf/\", data, { responseType: 'blob' });\n  // }\n\n  getPdf(data: any){\n    return this.httpClient.post(this.url + \"/bill/getPdf\", data);\n  }\n\n  getBills(){\n    return this.httpClient.get(this.url+\"/bill/getBills/\");\n  }\n\n  delete(id:any){\n    return this.httpClient.delete(this.url+\"/bill/delete/\"+id,{\n      headers:new HttpHeaders().set('Content-Type',\"application/json\")\n    })\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  url = environment.apiUrl;\n\n  constructor(private httpClient:HttpClient) { }\n\n  add(data:any){\n    return this.httpClient.post(this.url+\"/category/add/\",data,{\n      headers: new HttpHeaders().set('Content-Type',\"application/json\")\n    })\n  }\n\n  update(data:any){\n    return this.httpClient.patch(this.url+\"/category/update/\",data,{\n      headers: new HttpHeaders().set('Content-Type',\"application/json\")\n    })\n  }\n\n  getCategorys(){\n    return this.httpClient.get(this.url+\"/category/get/\")\n  }\n}\n","import { Component, OnInit, EventEmitter, Inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { ProductService } from 'src/app/services/product.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.scss']\n})\nexport class ProductComponent implements OnInit {\n\n  onAddProduct = new EventEmitter();\n  onEditProduct = new EventEmitter();\n  productForm: any = FormGroup;\n  dialogAction: any = \"Add\";\n  action: any = \"Add\";\n  responseMessage: any;\n  categorys: any = [];\n\n  constructor(@Inject(MAT_DIALOG_DATA) public dialogData: any,\n    private formBuilder: FormBuilder,\n    private productService: ProductService,\n    public dialogRef: MatDialogRef<ProductComponent>,\n    private categoryService: CategoryService,\n    private snackbarService: SnackbarService) { }\n\n  ngOnInit(): void {\n    this.productForm = this.formBuilder.group({\n      name: [null, [Validators.required, Validators.pattern(GlobalConstants.nameRegex)]],\n      categoryId: [null, Validators.required],\n      price: [null, Validators.required],\n      description: [null, Validators.required]\n    })\n\n    if (this.dialogData.action === \"Edit\") {\n      this.dialogAction = \"Edit\";\n      this.action = \"Update\";\n      this.productForm.patchValue(this.dialogData.data);\n    }\n\n    this.getCategorys();\n  }\n\n  //--------------------------------\n  getCategorys() {\n    this.categoryService.getCategorys().subscribe((response: any) => {\n      this.categorys = response;\n    }, (error: any) => {\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n      }\n      else {\n        this.responseMessage = GlobalConstants.genericError;\n      }\n      this.snackbarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n    })\n  }\n\n  //-----------------------------\n  handleSubmit(){\n    if(this.dialogAction === 'Edit'){\n      this.edit();\n    }\n    else{\n      this.add();\n    }\n  }\n\n  add(){\n    var formData = this.productForm.value;\n    var data = {    //data is send to backend when we want to add new product\n      name:formData.name,\n      categoryId:formData.categoryId,\n      price:formData.price,\n      description:formData.description\n    }\n    this.productService.add(data).subscribe((response:any)=>{\n      this.dialogRef.close();\n      this.onAddProduct.emit();\n      this.responseMessage = response.message;\n      this.snackbarService.openSnackBar(this.responseMessage,\"success\");\n    },(error)=>{\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n      }\n      else {\n        this.responseMessage = GlobalConstants.genericError;\n      }\n      this.snackbarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n    })\n  }\n\n  edit(){\n    var formData = this.productForm.value;\n    var data = {    //data is send to backend when we want to add new product\n      id:this.dialogData.data.id,\n      name:formData.name,\n      categoryId:formData.categoryId,\n      price:formData.price,\n      description:formData.description\n    }\n    this.productService.update(data).subscribe((response:any)=>{\n      this.dialogRef.close();\n      this.onEditProduct.emit();\n      this.responseMessage = response.message;\n      this.snackbarService.openSnackBar(this.responseMessage,\"success\");\n    },(error)=>{\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n      }\n      else {\n        this.responseMessage = GlobalConstants.genericError;\n      }\n      this.snackbarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n    })\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row fxLayout=\"row\">\n    <span class=\"title-center\">{{dialogData.action}} Product</span>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<mat-dialog-content class=\"mat-typography\">\n  <form [formGroup]=\"productForm\">\n    <div fxFlex fxLayout=\"column\">\n      <div fxLayout=\"row wrap\" fxLayoutGap=\"16px\">\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>Name</mat-label>\n          <input matInput formControlName=\"name\" required>\n          <mat-error *ngIf=\"productForm.controls.name.touched && productForm.controls.name.invalid\">\n            <span *ngIf=\"productForm.controls.name.errors.required\">This field is mandatory</span>\n            <!-- <span *ngIf=\"productForm.controls.name.errorrs.pattern\">This field is invalid</span> -->\n          </mat-error>\n        </mat-form-field>\n      </div>\n\n      <div fxLayout=\"row wrap\" fxLayoutGap=\"16px\">\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>Price</mat-label>\n          <input matInput formControlName=\"price\" required>\n          <mat-error *ngIf=\"productForm.controls.price.touched && productForm.controls.price.invalid\">\n            <span *ngIf=\"productForm.controls.price.errors.required\">This field is mandatory</span>\n            <!-- <span *ngIf=\"productForm.controls.price.errorrs.pattern\">This field is invalid</span> -->\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>Category</mat-label>\n          <mat-select formControlName=\"categoryId\" required>\n            <mat-option *ngFor=\"let category of categorys\" [value]=\"category.id\">{{category.name}}</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n\n      <div fxLayout=\"row wrap\" fxLayoutGap=\"16px\">\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>Description</mat-label>\n          <input matInput formControlName=\"description\" required>\n          <mat-error *ngIf=\"productForm.controls.description.touched && productForm.controls.description.invalid\">\n            <span *ngIf=\"productForm.controls.description.errors.required\">This field is mandatory</span>\n            <!-- <span *ngIf=\"productForm.controls.description.errorrs.pattern\">This field is invalid</span> -->\n          </mat-error>\n        </mat-form-field>\n      </div>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"center\">\n  <button mat-raised-button color=\"primary\" type=\"submit\" (click)=\"handleSubmit()\"\n    [disabled]=\"!(productForm.dirty)\">{{action}}</button>\n    <button mat-raised-button color=\"primary\" mat-dialog-close>Close</button>\n</mat-dialog-actions>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { ProductService } from 'src/app/services/product.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\nimport { ProductComponent } from '../dialog/product/product.component';\nimport { ConfirmationComponent } from '../dialog/confirmation/confirmation.component';\n\n@Component({\n  selector: 'app-manage-product',\n  templateUrl: './manage-product.component.html',\n  styleUrls: ['./manage-product.component.scss']\n})\nexport class ManageProductComponent implements OnInit {\n\n  displayedColumns:string[] = ['name','categoryName','description','price','edit'];\n  dataSource:any;\n  responseMessage:any;\n\n  constructor(private productService:ProductService,\n    private ngxService:NgxUiLoaderService,\n    private dialog:MatDialog,\n    private snackbarService:SnackbarService,\n    private router:Router) { }\n\n  ngOnInit(): void {\n    this.ngxService.start();\n    this.tableData();\n  }\n\n  tableData(): void{\n    this.productService.getProducts().subscribe((response:any)=>{\n      this.ngxService.stop();\n      this.dataSource = new MatTableDataSource(response);\n    },(error:any)=>{\n      this.ngxService.stop();\n      console.log(error);\n\n      if(error.error?.message){\n        this.responseMessage = error.error?.message;\n      }\n      else{\n        this.responseMessage = GlobalConstants.genericError;\n      }\n      this.snackbarService.openSnackBar(this.responseMessage,GlobalConstants.error);\n    })\n  }\n\n  applyFilter(event:Event){\n    const filterValue = (event.target as HTMLInputElement).value;\n\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  //------------------------------------\n  handleAddAction(){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      action: 'Add'\n    }\n    dialogConfig.width = \"850px\";\n    const dialogRef = this.dialog.open(ProductComponent,dialogConfig);\n    this.router.events.subscribe(()=>{\n      dialogRef.close();\n    })\n    const sub = dialogRef.componentInstance.onAddProduct.subscribe((response)=>{\n      this.tableData();\n    })\n  }\n\n  //--------------------------------------\n  handleEditAction(values:any){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      action: 'Edit',\n      data:values\n    }\n    dialogConfig.width = \"850px\";\n    const dialogRef = this.dialog.open(ProductComponent,dialogConfig);\n    this.router.events.subscribe(()=>{\n      dialogRef.close();\n    })\n    const sub = dialogRef.componentInstance.onEditProduct.subscribe((response)=>{\n      this.tableData();\n    })\n  }\n\n  //-----------------------------------\n  handleDeleteAction(values:any){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      message:'delete '+values.name+' product'\n    };\n    //we show conformation like Are you sure to delete product\n    const dialogRef = this.dialog.open(ConfirmationComponent,dialogConfig);\n    const sub = dialogRef.componentInstance.onEmitStatusChange.subscribe((response)=>{\n      this.ngxService.start();\n      this.deleteProduct(values.id);\n      dialogRef.close();\n    })\n  }\n\n  deleteProduct(id:any){\n    this.productService.delete(id).subscribe((response:any)=>{\n      this.ngxService.stop();\n      this.tableData();\n      this.responseMessage = response?.message;\n      this.snackbarService.openSnackBar(this.responseMessage,\"success\");\n    },(error:any)=>{\n      this.ngxService.stop();\n      console.log(error);\n\n      if(error.error?.message){\n        this.responseMessage = error.error?.message;\n      }\n      else{\n        this.responseMessage = GlobalConstants.genericError;\n      }\n      this.snackbarService.openSnackBar(this.responseMessage,GlobalConstants.error);\n    })\n  }\n  onChange(status:any,id:any){\n    var data = {\n      status:status.toString(),\n      id:id\n    }\n\n    this.productService.updateStatus(data).subscribe((response:any)=>{\n      this.ngxService.stop();\n      this.responseMessage = response?.message;\n      this.snackbarService.openSnackBar(this.responseMessage,\"success\");\n    },(error)=>{\n      this.ngxService.stop();\n      console.log(error);\n\n      if(error.error?.message){\n        this.responseMessage = error.error?.message;\n      }\n      else{\n        this.responseMessage = GlobalConstants.genericError;\n      }\n      this.snackbarService.openSnackBar(this.responseMessage,GlobalConstants.error);\n    })\n  }\n}\n","<mat-card>\n  <b><span>Manage Product</span></b>\n  <button mat-flat-button color=\"primary\" class=\"float-right\" (click)=\"handleAddAction()\">Add Product</button>\n</mat-card>\n<hr>\n\n<mat-card>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Filter</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" #input>\n  </mat-form-field>\n</mat-card>\n<hr>\n\n<div class=\"responsive_table\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef>Name</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"categoryName\">\n      <th mat-header-cell *matHeaderCellDef>Category</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.categoryName}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"description\">\n      <th mat-header-cell *matHeaderCellDef>Description</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.description}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"price\">\n      <th mat-header-cell *matHeaderCellDef>Price</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.price}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"edit\">\n      <th mat-header-cell *matHeaderCellDef>Action</th>\n      <td mat-cell *matCellDef=\"let element\" class=\"action-link\">\n        <button mat-icon-button color=\"primary\" matTooltip=\"Edit\" (click)=\"handleEditAction(element)\">\n          <mat-icon>edit</mat-icon>\n        </button>\n\n        <button mat-icon-button color=\"primary\" matTooltip=\"Delete\" (click)=\"handleDeleteAction(element)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n\n        <mat-slide-toggle (change)=\"onChange($event.checked,element.id)\" matTooltip=\"Activate or Deactivate Product\"\n          [checked]=\"element.status\"></mat-slide-toggle>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></tr>\n    <tr mat-row *matRowDef=\"let row,columns:displayedColumns\"></tr>\n\n  </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { BillService } from 'src/app/services/bill.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\nimport { ViewBillProductsComponent } from '../dialog/view-bill-products/view-bill-products.component';\nimport { ConfirmationComponent } from '../dialog/confirmation/confirmation.component';\nimport { saveAs } from 'file-saver';\n\n@Component({\n  selector: 'app-view-bill',\n  templateUrl: './view-bill.component.html',\n  styleUrls: ['./view-bill.component.scss']\n})\nexport class ViewBillComponent implements OnInit {\n\n  displayedColumns: string[] = ['name', 'email', 'contactNumber', 'paymentMethod', 'total', 'view'];\n  dataSource: any;\n  responseMessage: any;\n\n  constructor(\n    private billService: BillService,\n    private ngxService: NgxUiLoaderService,\n    private dialog: MatDialog,\n    private snackbarService: SnackbarService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.ngxService.start();\n    this.tableData();\n  }\n\n  tableData(): void {\n    this.billService.getBills().subscribe(\n      (response: any) => {\n        this.ngxService.stop();\n        this.dataSource = new MatTableDataSource(response);\n      },\n      (error: any) => {\n        if (error.error?.message) {\n          this.responseMessage = error.error?.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackbarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n      }\n    );\n  }\n\n  applyFilter(event: Event): void {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  handleViewAction(values: any): void {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      data: values\n    };\n    dialogConfig.width = \"100%\";\n    const dialogRef = this.dialog.open(ViewBillProductsComponent, dialogConfig);\n    this.router.events.subscribe(() => {\n      dialogRef.close();\n    });\n  }\n\n  downloadReportAction(values: any): void {\n    this.ngxService.start();\n    var data = {\n      name:values.name,\n      email:values.email,\n      uuid:values.uuid,\n      contactNumber:values.contactNumber,\n      paymentMethod:values.paymentMethod,\n      totalAmount:values.total,\n      productDetails:values.productDetails\n    }\n    this.billService.getPdf(data).subscribe((response:any) => {\n        this.ngxService.stop();\n        this.responseMessage = response?.message;   //arive from server side\n\n        // this.snackbarService.openSnackBar('PDF sent successfully through email!', \"success\");\n        this.snackbarService.openSnackBar(this.responseMessage,\"\");\n\n      },(error) => {\n        this.ngxService.stop();\n        // this.snackbarService.openSnackBar('Failed to send PDF through email', \"error\");\n        // console.error(error);\n\n        if(error.error?.message){\n          this.responseMessage = error.error.message;\n        }\n        else{\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackbarService.openSnackBar(this.responseMessage,GlobalConstants.error);\n      });\n  }\n\n  handleDeleteAction(values: any): void {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      message: 'delete '+values.name+' bill'\n    };\n    const dialogRef = this.dialog.open(ConfirmationComponent,dialogConfig);\n    const sub = dialogRef.componentInstance.onEmitStatusChange.subscribe((response)=>{\n      this.ngxService.start();\n      this.deleteProduct(values.id);\n      dialogRef.close();\n    })\n  }\n\n  deleteProduct(id:any){\n    this,this.billService.delete(id).subscribe((response:any)=>{\n      this.ngxService.stop();\n      this.tableData();\n      this.responseMessage = response?.message;\n      this.snackbarService.openSnackBar(this.responseMessage,\"success\");\n    },(error:any)=>{\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n      } else {\n        this.responseMessage = GlobalConstants.genericError;\n      }\n      this.snackbarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n    })\n  }\n\n}\n\n","<mat-card>\n  <b><span>View Bill</span></b>\n</mat-card>\n<hr>\n<mat-card>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Filter</mat-label>\n      <input matInput (keyup)=\"applyFilter($event)\" #input>\n  </mat-form-field>\n</mat-card>\n<hr>\n<div class=\"responsive_table\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef>Name</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"email\">\n      <th mat-header-cell *matHeaderCellDef>Email</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.email}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"contactNumber\">\n      <th mat-header-cell *matHeaderCellDef>ContactNumber</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.contactNumber}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"paymentMethod\">\n      <th mat-header-cell *matHeaderCellDef>PaymentMethod</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.paymentMethod}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"total\">\n      <th mat-header-cell *matHeaderCellDef>Total</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.total}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"view\">\n      <th mat-header-cell *matHeaderCellDef>Action</th>\n      <td mat-cell *matCellDef=\"let element\" class=\"action-link\">\n        <button mat-icon-button color=\"primary\" matTooltip=\"View\" (click)=\"handleViewAction(element)\">\n          <mat-icon>visibility</mat-icon>\n        </button>\n\n        <button mat-icon-button color=\"primary\" matTooltip=\"Download Bill\" (click)=\"downloadReportAction(element)\">\n          <mat-icon>summarize</mat-icon>\n        </button>\n\n        <button mat-icon-button color=\"primary\" matTooltip=\"Delete\" (click)=\"handleDeleteAction(element)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n</div>\n","import { Routes } from '@angular/router';\nimport { DashboardComponent } from '../dashboard/dashboard.component';\nimport { ManageCategoryComponent } from './manage-category/manage-category.component';\nimport { RouteGuardService } from '../services/route-guard.service';\nimport { ManageProductComponent } from './manage-product/manage-product.component';\nimport { ManageOrderComponent } from './manage-order/manage-order.component';\nimport { ViewBillComponent } from './view-bill/view-bill.component';\nimport { ManageUserComponent } from './manage-user/manage-user.component';\n\n\n\nexport const MaterialRoutes: Routes = [\n  {\n    path:'category',\n    component:ManageCategoryComponent,\n    canActivate:[RouteGuardService],\n    data:{\n      expectedRole:['admin']\n    }\n  },\n  {\n    path:'product',\n    component:ManageProductComponent,\n    canActivate:[RouteGuardService],\n    data:{\n      expectedRole:['admin']\n    }\n  },\n  {\n    path:'order',\n    component:ManageOrderComponent,\n    canActivate:[RouteGuardService],\n    data:{\n      expectedRole:['admin','user']\n    }\n  },\n  {\n    path:'bill',\n    component:ViewBillComponent,\n    canActivate:[RouteGuardService],\n    data:{\n      expectedRole:['admin','user']\n    }\n  },\n  {\n    path:'user',\n    component:ManageUserComponent,\n    canActivate:[RouteGuardService],\n    data:{\n      expectedRole:['admin']\n    }\n  }\n];\n"],"sourceRoot":"webpack:///"}